#include <ESP8266WiFi.h>
#include <PubSubClient.h> // https://github.com/knolleary/pubsubclient/releases/tag/v2.3
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>

//-------- Customise these values -----------
const char* ssid = "HackathonV4";
const char* password = "hackhack";

#define DHTPIN D2 
#define DHTTYPE DHT11 
#define ORG "adqo9n"
#define DEVICE_TYPE "ESP"
#define DEVICE_ID "ESP-PIR"
#define TOKEN "8h0kv+t3(Tr7O(kkx6"
//-------- Customise the above values --------

char server[] = ORG ".messaging.internetofthings.ibmcloud.com";
char topic[] = "iot-2/evt/status/fmt/json";
char authMethod[] = "use-token-auth";
char token[] = TOKEN;
char clientId[] = "d:" ORG ":" DEVICE_TYPE ":" DEVICE_ID;

WiFiClient wifiClient;
PubSubClient client(server, 1883, NULL, wifiClient);

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(115200);
  Serial.println();

  Serial.print("Connecting to "); Serial.print(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");

  Serial.print("WiFi connected, IP address: "); Serial.println(WiFi.localIP());

  pinMode(D1, INPUT);
}

int counter = 0;
int counterPIR = 0;
int movement = 0;
int photoResistor = 0;
float h = 0;
float t = 0;

void loop() {

  counter++;
  photoResistor += map(analogRead(A0),0,1023,100,0);
  h = dht.readHumidity();
  t = dht.readTemperature();

  if (digitalRead(D1) == 1) {
    counterPIR++;
  }

  if (counter == 100) {

    if (!client.connected()) {
      Serial.print("Reconnecting client to ");
      Serial.println(server);
      while (!client.connect(clientId, authMethod, token)) {
        Serial.print(".");
        delay(500);
      }
      Serial.println();
    }

    if (counterPIR == 0) {
      movement = 0;
    }
    else {
      movement = 1;
    }    

    String payload = "{\"d\":{\"Name\":\"ESP-PIR\"";
    payload += ",\"Activity\":";
    payload += movement;
    payload += ",\"Value\":";
    payload += counterPIR;
    payload += ",\"Light\":";
    payload += photoResistor/counter;
    payload += ",\"Humidity\":";
    payload += h;
    payload += ",\"Temperature\":";
    payload += t;
    payload += "}}";

    Serial.print("Sending payload: ");
    Serial.println(payload);

    counter = 0;
    counterPIR = 0;
    photoResistor = 0;

    if (client.publish(topic, (char*) payload.c_str())) {
      Serial.println("Publish ok");
    } else {
      Serial.println("Publish failed");
    }

  }

  delay(100);
}
